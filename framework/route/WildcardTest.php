<?php

namespace KoolDevelop\Route;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-12-13 at 11:26:03.
 */
class WildcardTest extends \PHPUnit_Framework_TestCase {
    
    /**
     * Test routing of questionmark in query
     * 
     * @covers KoolDevelop\Route\Wildcard::route()
     */
    public function testQuestionMark() {
        $wildcard = new Wildcard('/?estcase/', '/testcase/$1');
        $route = '/aestcase/';
        $wildcard->route($route);
        $this->assertEquals('/testcase/a', $route);
    }

    /**
     * Test routing of wildcard in query
     * 
     * @covers KoolDevelop\Route\Wildcard::route()
     */
    public function testWildcardInQuery() {
        $wildcard = new Wildcard('/*_case/', '/testcase/$1');
        $route = '/ab_case/';
        $wildcard->route($route);
        $this->assertEquals('/testcase/ab', $route);
    }
    
    /**
     * Test routing of wildcard at the end of the query
     * 
     * @covers KoolDevelop\Route\Wildcard::route()
     */
    public function testWildcardAtEndOfQuery() {
        $wildcard = new Wildcard('/testcase/*', '/$1');
        $route = '/testcase/example';
        $wildcard->route($route);
        $this->assertEquals('/example', $route);
    }
    
    /**
     * Test routing with complex replacement query
     * 
     * @covers KoolDevelop\Route\Wildcard::route()
     */
    public function testComplexReplacementQuery() {
        $wildcard = new Wildcard('/????case/*/*', '/$1$2$3$4/$6/$5');
        $route = '/testcase/example/item';
        $wildcard->route($route);
        $this->assertEquals('/test/item/example', $route);
    }
    
}
